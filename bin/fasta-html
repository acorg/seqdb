#! /usr/bin/env python3
# -*- Python -*-

"""
Generates html to present AA sequences from the fasta file
"""

import sys, os, traceback, pprint
if sys.version_info.major != 3: raise RuntimeError("Run script with python3")
from pathlib import Path
sys.path[:0] = [str(Path(os.environ["ACMACSD_ROOT"]).resolve().joinpath("py"))]
import logging; module_logger = logging.getLogger(__name__)

from seqdb import fasta as fasta_m
from acmacs_base.files import write_binary

# ----------------------------------------------------------------------

def main(args):
    global sHtml
    source_entries = list(fasta_m.read_from_file(args.input[0]))
    master_entries = source_entries[:args.master_entries]
    test_entries = source_entries[args.master_entries:]
    if args.full_table:
        rows = make_ruler() + "".join(f"<tr>\n{make_row(no, *entry)}\n</tr>\n" for no, entry in enumerate(source_entries)) + make_ruler()
        full_table = f"<table class='fasta-aa-entries'>{rows}</table>\n<br><br><br>"
    else:
        full_table = ""
    compare_tables = []
    for master in master_entries:
        rows_compare = make_ruler() + f"<tr>\n{make_row(0, *master, cls='fasta-aa-master')}\n</tr>\n" + "".join(f"<tr>{make_row_compare(no, master[1], *entry)}</tr>\n" for no, entry in enumerate(test_entries)) + make_ruler()
        compare_tables.append(f"<p class='table-title'>Comapring with {master[0]}</p>\n<table class='fasta-aa-entries'>{rows_compare}</table>\n")
    write_binary(args.output[0], (sHtml % {"title": args.title, "data": full_table + "\n".join(compare_tables)}).encode("utf-8"))

# ----------------------------------------------------------------------

def make_row(no, name, sequence, cls=""):
    aas = "".join(f"  <td class='aa-{aa}' title='{pos} {name}'>{aa}</td>\n" for pos, aa in enumerate(sequence, start=1))
    sequence = f"<table class='fasta-aa-sequence'><tr>{aas}</tr></table>"
    if cls == "":
        row_odd = "row-odd" if no % 2 != 0 else "row-even"
    else:
        row_odd = ""
    return f"<td class='fasta-aa-name {row_odd} {cls}'>{name}</td><td class='fasta-aa-sequence {row_odd}'>{sequence}</td>"

# ----------------------------------------------------------------------

def make_row_compare(no, master_sequence, name, sequence):
    def show_aa(pos, aa):
        if master_sequence[pos-1] == aa:
            return "&middot;"
        else:
            return aa
    aas = "".join(f"  <td class='aa-{aa}' title='{pos}{aa} {name}'>{show_aa(pos, aa)}</td>\n" for pos, aa in enumerate(sequence, start=1))
    sequence = f"<table class='fasta-aa-sequence'><tr>{aas}</tr></table>"
    row_odd = "row-odd" if no % 2 != 0 else "row-even"
    return f"<td class='fasta-aa-name {row_odd}'>{name}</td><td class='fasta-aa-sequence {row_odd}'>{sequence}</td>"

# ----------------------------------------------------------------------

def make_ruler():
    ruler_text = "....;....|10..;....|20..;....|30..;....|40..;....|50..;....|60..;....|70..;....|80..;....|90..;....|100.;....|110.;....|120.;....|130.;....|140.;....|150.;....|160.;....|170.;....|180.;....|190.;....|200.;....|210.;....|220.;....|230.;....|240.;....|250.;....|260.;....|270.;....|280.;....|290.;....|300.;....|310.;....|320.;....|330.;....|340.;....|350.;....|360.;....|370.;....|380.;....|390.;....|400.;....|410.;....|420.;....|430.;....|440.;....|450.;....|460.;....|470.;....|480.;....|490.;....|500.;....|510.;....|520.;....|530.;....|540.;....|550"
    ruler = "".join(f"<td>{field}</td>" for field in ruler_text)
    return f"<tr><td class='name'></td><td class='fasta-aa-sequence'><table class='fasta-aa-sequence'><tr>{ruler}</tr></table></td></tr>\n"

# ----------------------------------------------------------------------

sHtml = """<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <style>
     table.fasta-aa-entries { white-space: nowrap; }
     table.fasta-aa-entries td.fasta-aa-name.fasta-aa-master { color: magenta; }
     table.fasta-aa-entries .row-even { background-color: #F0F0F0; }
     table.fasta-aa-entries table.fasta-aa-sequence { border-spacing: 0; font-family: Menlo, monospace; }
     .aa-A { color: blue; }
     .aa-C { color: salmon; }
     .aa-D { color: magenta; }
     .aa-E { color: magenta; }
     .aa-F { color: blue; }
     .aa-G { color: #FF8C00; }
     .aa-H { color: #008B8B; }
     .aa-I { color: blue; }
     .aa-K { color: red; }
     .aa-L { color: blue; }
     .aa-M { color: blue; }
     .aa-N { color: #228B22; }
     .aa-P { color: goldenrod; }
     .aa-Q { color: #228B22; }
     .aa-R { color: red; }
     .aa-S { color: #228B22; }
     .aa-T { color: #228B22; }
     .aa-V { color: blue; }
     .aa-W { color: blue; }
     .aa-Y { color: #008B8B; }
     .aa-X { color: grey; }
     p.table-title { font-weight: bold; margin: 3em 0 0 2em; }
    </style>
    <title>%(title)s</title>
  </head>
  <body>
    <h2>%(title)s</h2>
%(data)s
  </body>
</html>
"""

# ----------------------------------------------------------------------

try:
    import argparse
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('input', nargs=1, help='Fasta file to process.')
    parser.add_argument('output', nargs=1, help='Output file.')
    parser.add_argument('-m', '--master', type=int, dest='master_entries', default=1, help='Number of master entries to compare with.')
    parser.add_argument('-f', '--full-table', action='store_true', dest='full_table', default=False, help='Include full table.')
    parser.add_argument('-t', '--title', action='store', dest='title', default="Sequences")
    parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')
    args = parser.parse_args()
    logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s")
    exit_code = main(args)
except Exception as err:
    logging.error('{}\n{}'.format(err, traceback.format_exc()))
    exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
